
import java.util.ArrayDeque;

public class RMEnvia{

  // Reference to server
  

  // Queue of lists of alarms
  private ArrayDeque<AlarmaMaquina> alarmas;

  // Boolean vairable to control sender loop
  private boolean stop;


  private serverManager(){
    // Asignar valor a referencia de servidor
    

    // Initialize empty queue
    alarmas = new ArrayDeque<>();
  }

  public void addAlarma(AlarmaMaquina alarma){
    //synchronize queue to not generate errors while passing
    synchronized (alarmas){
      alarmas.add(alarma);
    }
  }

  public void stopSending(boolean newStop){
    stop = newStop;
  }

  public void enviar(){
    while (!stop){
      // Message (alarm) to be sent
      AlarmaMaquina alarma = null;
      try{
        while (!alarmas.isEmpty()){
          // Revisa lo que hay en la cabeza de la cola (no la borra)
          alarma = alarmas.peek();
          // Invocar el servicio
          
          // Remover la alarma de la cola
          alarmas.poll();
        }
        // Similar to sleep, but more efficient with cpu
        Thread.yield();

      }catch (Exception e){
        System.out.println("NO SE PUDO ENVIAR LA ALARMA");
      }

    }

  }

}